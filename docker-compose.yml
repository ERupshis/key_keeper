# docker-compose.yml
version: '3.7'

services:
  server_db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=server_db
    ports:
      - '15432:5432'
    networks:
      - net-internal
    volumes:
      - server_db:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    container_name: minio
    ports:
      - '19000:9000'
      - '19001:9001'
    environment:
      MINIO_ROOT_USER: qwerty
      MINIO_ROOT_PASSWORD: asd123456
    volumes:
      - minio-storage:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:19000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - net-internal

  server:
    image: server:latest
    container_name: server
    build:
      context: .
      dockerfile: docker/server.DockerFile
    restart: unless-stopped
    networks:
      - net-internal
    ports:
      - '8081:8081'
    environment:
      HOST: :8081
      DATABASE_DSN: postgres://postgres:postgres@server_db:5432/server_db?sslmode=disable

      JWT_KEY: sdFijl^&*^FDhUHK#2221f
      HASH_KEY: ijdsoic9324890GJGHdjkKJHeHKEhkjehkjh3
      S3_KEY_ID: qwerty
      S3_KEY: asd123456
      S3_ENDPOINT: minio:9000
    depends_on:
      - server_db

networks:
  net-internal:
    driver: bridge

volumes:
  server_db:
  minio-storage:
